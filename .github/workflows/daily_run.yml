name: Daily Run

on:
  workflow_dispatch: # 수동 실행을 허용
    inputs:
      date:
        description: 'YYYY-MM-DD 형식의 날짜 (비워두면 어제 날짜를 자동으로 사용)'
        required: false
  schedule:
    # arXiv 발표는 미국 동부 시간(ET) 기준 일-목 20:00에 이루어집니다.
    # 이는 UTC 기준 다음날 00:00 (EDT) 또는 01:00 (EST)에 해당합니다.
    # 안정적인 수집을 위해, 워크플로우를 매주 월-금 01:00 UTC에 실행합니다.
    # (한국 시간 KST 기준: 매주 월-금 오전 10:00)
    - cron: '0 1 * * 1-5'

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./main_repo

    steps:
      - name: Checkout code repository
        uses: actions/checkout@v4
        with:
          path: main_repo # 코드를 main_repo 디렉토리에 체크아웃

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Get Target Date
        id: get_date
        run: |
          if [ -n "${{ github.event.inputs.date }}" ]; then
            TARGET_DATE="${{ github.event.inputs.date }}"
          else
            TARGET_DATE=$(date -u -d "yesterday" +%Y-%m-%d)
          fi
          echo "TARGET_DATE=${TARGET_DATE}" >> $GITHUB_OUTPUT
          echo "Target date for this run is ${TARGET_DATE}"

      - name: Run main script
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        run: |
          python main.py --date ${{ steps.get_date.outputs.TARGET_DATE }} --window-based-fetch

      - name: Upload report and data
        if: success()
        env:
          GITHUB_ACTOR: Jinsu-L
          API_TOKEN_GITHUB: ${{ secrets.PAT }}
        run: |
          python scripts/uploader.py --report-date ${{ steps.get_date.outputs.TARGET_DATE }} --data-dir ./data

      - name: Send notification email
        if: success()
        env:
          MAIL_RECIPIENTS: ${{ secrets.MAIL_RECIPIENTS }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        run: |
          REPORT_FILE_PATH="reports/${{ steps.get_date.outputs.TARGET_DATE }}.md"
          DEST_REPO_SLUG="Jinsu-L/DailyIR"
          python scripts/mail_sender.py \
            --report-path "${REPORT_FILE_PATH}" \
            --repo-slug "${DEST_REPO_SLUG}" 